#!/bin/sh
# 

PREREQ=""

prereqs()
{
	echo "$PREREQ"
}

case $1 in
# get pre-requisites
prereqs)
	prereqs
	exit 0
	;;
esac

quiet=n


. /scripts/functions
. /conf/tcos.conf
. /conf/tcos-run-functions

# if break=initsound STOP here
maybe_break initsound

TCOS_DISABLE_SOUND=$(read_cmdline_var "nosound" "0")

if [  ${TCOS_SOUND} = 0  -o ${TCOS_DISABLE_SOUND} = 1 ]; then
  log_begin_msg "Sound disabled"
  log_end_msg
  exit 0
fi


# check if soundcard is avalaible
if [ ! -d /proc/asound  ] && [ ! -e /dev/dsp ] ; then
  _log "INITSOUND /proc/asound and /dev/dsp don't exists, need other kernel modules!!!"
  log_failure_msg "No soundcard found"
  log_end_msg 1
  exit 0
fi

# DOCUMENTME volume=XX% | set master and pcm volume levels to value passed (0%-100% or integer from 1 to 31)
TCOS_VOLUME=$(read_cmdline_var "volume" "${TCOS_VOLUME}")

cat <<EOF > /etc/esound/esd.conf
[esd]
EOF

# setting volumes
log_begin_msg "Setting volume to ${TCOS_VOLUME}"
  _log "INITSOUND Setting volume to ${TCOS_VOLUME}"
  amixer -c 0 set 'PCM' ${TCOS_VOLUME} unmute >> /tmp/initramfs.debug 2>&1
  amixer -c 0 set 'Master' ${TCOS_VOLUME} unmute >> /tmp/initramfs.debug 2>&1
  amixer -c 0 set 'Master Digital' ${TCOS_VOLUME} unmute >> /tmp/initramfs.debug 2>&1
  if [ -x /usr/bin/aumix ]; then
    aumix -v ${TCOS_VOLUME}
    aumix -w ${TCOS_VOLUME}
  fi
log_end_msg


if [ -e /dev/dsp ] && [ ! -d /proc/asound ]; then
   export TCOS_SOUND_OSS=1
   echo "TCOS_SOUND_OSS=1" >> /conf/tcos.conf

  log_begin_msg "Init sound server OSS (eSound)"
    /sbin/startesd
  log_end_msg
fi

if [ $TCOS_PULSEAUDIO ]; then
  log_begin_msg "Init sound server (PulseAudio)"
    _log "INITSOUND starting pulseaudio"
    startpulseaudio 2> /var/log/pulseaudio.log &
  log_end_msg

elif [ ! $TCOS_PULSEAUDIO ] && [ ! $TCOS_SOUND_OSS ]; then
  log_begin_msg "Init sound server (esound)"
    _log "INITSOUND starting esd daemon"
    /sbin/startesd
  log_end_msg
fi

update_progress

exit 0
