#!/bin/sh
# 

PREREQ="01busybox 02check_ram"

prereqs()
{
	echo "$PREREQ"
}

case $1 in
# get pre-requisites
prereqs)
	prereqs
	exit 0
	;;
esac

quiet=n

PATH=$PATH:/usr/bin:/usr/sbin
export PATH


. /scripts/functions
. /conf/tcos.conf
. /conf/tcos-run-functions

# if break=sqmount STOP here
maybe_break network

# file to save progress %
echo 5 > /tmp/progress

# localhost
log_begin_msg "Bring up Local loopback device"
 ifconfig lo up
log_end_msg

touch /etc/resolv.conf

if [ -d /var/lib/dhcp3 ]; then
  # link to work with dhcp-client or dhcp3-client
  ln -s /var/lib/dhcp3 /var/lib/dhcp

  chown root:dhcp /lib/dhcp3-client
  chown 775 /lib/dhcp3-client
  chmod 4744 /lib/dhcp3-client/call-dhclient-script

  chown root:dhcp /etc/resolv.conf
  chmod 644 /etc/resolv.conf
fi

# wireless TCOS minihowto
#
#  start thin client with something like this:
#
# boot: tcos essid="ESSID" server=xx.xx.xx.xx
# * server is tftpd and XMDCP host
# * ESSID is wireless network



# get list of network interfaces
TCOS_NET_ACTIVE="eth0"
TCOS_NET_WIFI=
TCOS_NET_WIFI_ESSID=""
TCOS_NET_DEVS=$(ls /sys/class/net/|grep -v lo|grep -v sit0)

if [ $(read_cmdline_var 'wifi' '0') = "1" ]; then
  #force wireless, read some vars
  TCOS_NET_WIFI_ESSID=$(read_cmdline_var "essid" "")
  for dev in $TCOS_NET_DEVS; do
    # is wireless????
    if [ -d /sys/class/net/$dev/wireless ]; then
      TCOS_NET_WIFI=1
      TCOS_NET_ACTIVE=$dev
    fi
  done
fi


# DHCP
log_begin_msg "Setup network interface $TCOS_NET_ACTIVE"
 
 if [ $TCOS_NET_WIFI ]; then
    # load kernel modules
    log_progress_msg "Loading wireless kernel modules"
    for kmod in $TCOS_WIRELESS_MODS; do
        modprobe -q $kmod 2>/dev/null
    done
    ifconfig $TCOS_NET_ACTIVE down
    ifconfig $TCOS_NET_ACTIVE up
 
    # scan wireless
    log_progress_msg "Scanning wireless networks"
    iwlist $TCOS_NET_ACTIVE scan | grep ESSID | awk -F ":" '{print $2}' | sed s/\"//g

    # associate if ap cmdline var is set
    if [ "$TCOS_NET_WIFI_ESSID" != "" ]; then
       if [ "$TCOS_WIRELESS_ENC" = "WPA" ]; then
           log_progress_msg "Wireless WPA mode"
           /sbin/start-wpa.sh "${TCOS_NET_ACTIVE}"
       fi
       
       log_progress_msg "Wireless associating with $TCOS_NET_WIFI_ESSID"
       iwconfig $TCOS_NET_ACTIVE essid "$TCOS_NET_WIFI_ESSID"
    else
       log_progress_msg "Wireless associating with any"
       iwconfig $TCOS_NET_ACTIVE essid any
    fi
 else
    # wired network
    ifconfig $TCOS_NET_ACTIVE down
    ifconfig $TCOS_NET_ACTIVE up
 fi
 
 # break for wireless
 maybe_break wireless
 
 _log "DHCLIENT $TCOS_NET_ACTIVE"
 dhclient $TCOS_NET_ACTIVE >> /tmp/initramfs.debug  2>&1
 myip=$(ifconfig $TCOS_NET_ACTIVE | grep "inet addr"| awk '{print $2}' | awk -F ":" '{print $2}')
 dhcpserver=$(grep 'dhcp-server' /var/lib/dhcp/dhclient.leases | awk '{print $3}' | awk -F ";" '{print $1}')
 hostname=$(grep 'host-name' /var/lib/dhcp/dhclient.leases | awk '{print $3}' | awk -F ";" '{print $1}' | sed s/\"//g)

log_end_msg

# hack for dhcp3-client
if [ "$myip" = "" ]; then
   log_begin_msg "Forcing net for dhcp3-client"
     myip=$(grep 'fixed-address' /var/lib/dhcp/dhclient.leases     | head -1| awk '{print $2}' | sed s/";"//g)
     dhcpserver=$(grep 'dhcp-server' /var/lib/dhcp/dhclient.leases | head -1| awk '{print $3}' | sed s/";"//g)
     netmask=$(grep 'subnet-mask' /var/lib/dhcp/dhclient.leases | head -1| awk '{print $3}' | sed s/";"//g)
     gateway=$(grep 'routers' /var/lib/dhcp/dhclient.leases     | head -1| awk '{print $3}' | sed s/";"//g)
     #ifconfig $TCOS_NET_ACTIVE down
     ifconfig $TCOS_NET_ACTIVE $myip netmask $netmask up
     route add default dev $TCOS_NET_ACTIVE gw $gateway
   log_end_msg
fi


if [ -n ${TCOS_DEBUG} ]; then
 #log_begin_msg "Configured data is:
 # local-ip=${myip} 
 # server_ip=${dhcpserver}
 # hostname=${hostname}"
  _log "NETWORK data: ip=${myip} server=${dhcpserver} hostname=${hostname}"
 #log_end_msg
fi

# count number of ":" in hostname string
if [ $(echo $hostname | awk '{print split($1, A, ":")}') -gt 1 ]; then
  if [ -x /bin/hex2ascii ]; then
    # got an hexadecimal hostname
    hostname2=$(hex2ascii $hostname)
    _log "NETWORK HEX hostname \"$hostname\"=\"$hostname2\""
    hostname=$hostname2
  fi
fi

if [ "x{$hostname}" = "x" ]; then
  hostname=tcos
fi


# Setup the hostname
log_begin_msg "Setting hostname to ${hostname}"
  echo $hostname > /etc/hostname
  echo $hostname > /proc/sys/kernel/hostname
  cat <<EOF > /etc/hosts
127.0.0.1       localhost.localdomain   localhost
127.0.0.1	localhost
${myip}		${hostname}
${dhcpserver}	tcos-server
EOF

# set dns
echo "nameserver $TCOS_DNS_SERVER" > /etc/resolv.conf


hostname $hostname
export HOSTNAME=$hostname
export hostname
log_end_msg


update_progress

exit 0
