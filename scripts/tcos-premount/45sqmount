#!/bin/sh
# 

PREREQ=""

prereqs()
{
	echo "$PREREQ"
}

case $1 in
# get pre-requisites
prereqs)
	prereqs
	exit 0
	;;
esac


quiet=n


. /scripts/functions
# if break=sqmount STOP here
maybe_break sqmount


. /conf/tcos.conf
. /conf/tcos-run-functions

TCOS_SQUASHFS=$(read_cmdline_var "squashfs" "${TCOS_SQUASHFS}")

if [ ! -z $TCOS_DISABLE_SQUASHFS ]; then
  _log "SQMOUNT no squashfs support, exiting"
  # no squashfs support defined
  exit 0
fi


USR_SQUASH=/mnt/tmp/usr-$(uname -r).squashfs
MOD_SQUASH=/mnt/tmp/allmodules-$(uname -r).squashfs

# check if have in /mnt/tmp without version
if [ -f /mnt/tmp/usr.squashfs ]; then
  USR_SQUASH=/mnt/tmp/usr.squashfs
fi

if [ -f /mnt/tmp/allmodules.squashfs ]; then
  MOD_SQUASH=/mnt/tmp/allmodules.squashfs
fi


# check if we are booting from HD / USB
_INITRD=$(read_cmdline_var "initrd" "")
if [ "$_INITRD" = "initrd.gz" ]; then
   # booting from hdd, use usr.squashfs from HDD if exists
   mkdir -p /target

   for part in $(grep -e ext3 -e vfat /etc/fstab| awk '{print $1":"$3}'); do
     device=$(echo $part | awk -F":" '{print $1}')
     fs=$(echo $part | awk -F":" '{print $2}')
     mount -t${fs} ${device} /target

     if [ -f /target/usr.squashfs ]; then
       USR_SQUASH=/target/usr.squashfs
       _log "SQMOUNT found usr.squashfs in $device "
       break
     elif [ -f /target/usr-$(uname -r).squashfs ]; then
       USR_SQUASH=/target/usr-$(uname -r).squashfs
       _log "SQMOUNT found usr-$(uname -r).squashfs in $device "
       break
     else
       umount /target        
     fi
   done
fi





##############################################


if [ ! -e /dev/loop0 ] && [ ! -e /dev/loop1 ]; then
  for NUM in $(seq 0 8) ; do 
    mknod /dev/loop$NUM b 7 $NUM 
  done
fi



# Mount squashfs filesystems
log_begin_msg "Mounting usr filesystem"
 mount -r -o loop -t squashfs ${USR_SQUASH} /usr >> /tmp/initramfs.debug 2>&1
 # check if squashfs mount give an error
 if [ $? != 0 ]; then
   panic "Error mounting usr.squashfs check squashfs module or bugs"
   FS1='(initramfs) ' exec /bin/sh </dev/console >/dev/console 2>&1
 fi
log_end_msg



###############################################



# DOCUMENTME allmodules | download with tftp allmodules.squashfs to test what modules need thin client
TCOS_ALL_MODULES=$(read_cmdline_var "allmodules" "0")

if [ "$TCOS_ALL_MODULES" = "1" ] && [ -f ${MOD_SQUASH} ]; then

  log_begin_msg "Mounting allmodules.squashfs"
    mount -r -o loop -t squashfs ${MOD_SQUASH} /lib/modules/$(uname -r)/ >> /tmp/initramfs.debug 2>&1
  log_end_msg $?

fi


update_progress 5

exit 0

