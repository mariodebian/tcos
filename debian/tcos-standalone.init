#! /bin/sh
### BEGIN INIT INFO
# Provides:          tcosxmlrpc-standalone
# Required-Start:    $local_fs $remote_fs
# Required-Stop:     $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start tcosxmlrpc standalone in installed system
# Description:       This file should be used to construct scripts to be
#                    placed in /etc/init.d.
### END INIT INFO

# Author: Mario Izquierdo (mariodebian) <mariodebian@gmail.com>
#

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/lib/tcos

DESC="TcosXMLRPC standalone"
NAME=tcosxmlrpc-standalone
DAEMON=/usr/lib/tcos/$NAME

DAEMON_ARGS="/var/lib/tcos/standalone/etc/abyss-standalone.conf"
DAEMON_WWW="/var/lib/tcos/standalone/www"

SCRIPTNAME=/etc/init.d/$NAME
DEFAULT_CONF=/etc/default/tcos-standalone
TCOS_STANDALONE_START=1

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Read configuration file if it is present
[ -e "$DEFAULT_CONF" ] && . ${DEFAULT_CONF}

# Load the VERBOSE setting and other rcS variables
[ -e /lib/init/vars.sh ] && . /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
        # start httpd on 8081 port
        /usr/lib/tcos/starthttpd.sh

	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
        $DAEMON $DAEMON_ARGS >> /var/lib/tcos/standalone/log/tcos-standalone.log 2>&1 || return 2
        return 0
}

#
# Function that stops the daemon/service
#
do_stop()
{
        # kill busybox httpd
        kill $(ps aux|grep "busybox httpd" |grep -v grep | awk '{print $2}') 2>/dev/null

        kill $(cat /var/lib/tcos/standalone/log/abyss.pid 2>/dev/null ) 2> /dev/null
        killall tcosxmlrpc-standalone 2>/dev/null
        rm -f /var/lib/tcos/standalone/log/abyss.pid
        # clean www data
        rm -f ${DAEMON_WWW}/*
	return 0
}


case "$1" in
  start)
        [ "$TCOS_STANDALONE_START" = "0" ] && exit 0 
	log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) log_end_msg 0 ;;
		2)  log_end_msg 1 ;;
	esac
	;;
  stop)
	log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) log_end_msg 0 ;;
		2)  log_end_msg 1 ;;
	esac
	;;
  restart|force-reload)
	#
	# If the "reload" option is implemented then remove the
	# 'force-reload' alias
	#
        [ "$TCOS_STANDALONE_START" = "0" ] && exit 0 
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
	  	# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
   status)
       if [ "$(pidof tcosxmlrpc-standalone)" = "$(cat /var/lib/tcos/standalone/log/abyss.pid 2>/dev/null)" ] && \
	  [ "$(pidof tcosxmlrpc-standalone)" != "" ] ; then
           echo "tcosxmlrpc running"
       else
           echo "tcosxmlrpc stopped"
       fi

       if [ "$(pidof busybox)" != "" ]; then
          echo "busybox running"
       else
          echo "busybox stopped"
       fi
       ;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|restart|status}" >&2
	exit 3
	;;
esac

:
